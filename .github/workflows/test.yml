name: Release

on: push

jobs:
  build:
    runs-on: ${{ matrix.os }}
    env:
      SUPABASE_URL: ${{ vars.SUPABASE_URL }}
      SUPABASE_ANON_KEY: ${{ secrets.SUPABASE_ANON_KEY }}
      SECRET_KEY: ${{ secrets.SECRET_KEY }}

    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]

    steps:
    - name: Checkout code
      uses: actions/checkout@v1
    - name: Get Latest Tag
      id: get_tag
      run: |
        if [[ $RUNNER_OS == 'Windows' ]]; then 
          pwsh -Command '$tagName = git describe --tags --abbrev=0; Write-Output "TAG_NAME=$tagName" >> $env:GITHUB_ENV'
        else
          tagName=$(git describe --tags --abbrev=0)
          echo "TAG_NAME=$tagName" >> $GITHUB_ENV
      shell: bash

    - name: Set up Node.js
      uses: actions/setup-node@v1
      with:
        node-version: '16'

    - name: Install dependencies
      run: npm install
      

    - name: Generate Changelog
      run: npm run changelog

    - name: Build Electron app
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SUPABASE_URL: ${{ vars.SUPABASE_URL }}
        SUPABASE_ANON_KEY: ${{ secrets.SUPABASE_ANON_KEY }}
        SECRET_KEY: ${{ secrets.SECRET_KEY }}
      run: |
        npm run build -- --${{ matrix.platform }}
        

    - name: Create GitHub Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SUPABASE_URL: ${{ vars.SUPABASE_URL }}
        SUPABASE_ANON_KEY: ${{ secrets.SUPABASE_ANON_KEY }}
        SECRET_KEY: ${{ secrets.SECRET_KEY }}
      with:
        tag_name: ${{ env.TAG_NAME }}
        release_name: Release ${{ env.TAG_NAME }}
        body_path: ./CHANGELOG.md
        draft: true
        prerelease: false

