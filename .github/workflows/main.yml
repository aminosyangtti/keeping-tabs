name: Build and Pre-Release

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '16'

    - name: Set environment variables
      run: |
        echo SUPABASE_URL=${{ secrets.SUPABASE_URL }} >> $GITHUB_ENV
        echo SUPABASE_ANON_KEY=${{ secrets.SUPABASE_ANON_KEY }} >> $GITHUB_ENV
        echo SECRET_KEY=${{ secrets.SECRET_KEY }} >> $GITHUB_ENV


    - name: Install dependencies
      run: npm install

    - name: Build Electron App
      run: npm run build

    - name: Package Electron App
      run: npm run dist

    - name: Upload Artifacts
      uses: actions/upload-artifact@v2
      with:
        name: electron-app-${{ matrix.os }}
        path: dist/*

  release:
    needs: build
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Download Artifacts (Ubuntu)
      uses: actions/download-artifact@v2
      with:
        name: electron-app-ubuntu-latest
        path: dist

    - name: Download Artifacts (Windows)
      uses: actions/download-artifact@v2
      with:
        name: electron-app-windows-latest
        path: dist

    - name: Create GitHub Pre-Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v1.0.0
        release_name: 'Pre-Release v1.0.0'
        body: 'Description of the pre-release'
        draft: false
        prerelease: true

    - name: Upload Release Assets (Ubuntu)
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: dist/*
        asset_name: electron-app-ubuntu.zip
        asset_content_type: application/zip

    - name: Upload Release Assets (Windows)
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: dist/*
        asset_name: electron-app-windows.zip
        asset_content_type: application/zip
